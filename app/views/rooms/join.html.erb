<%
# BigBlueButton open source conferencing system - http://www.bigbluebutton.org/.
# Copyright (c) 2018 BigBlueButton Inc. and by respective authors (see below).
# This program is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free Software
# Foundation; either version 3.0 of the License, or (at your option) any later
# version.
#
# BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
# You should have received a copy of the GNU Lesser General Public License along
# with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
%>

<style>
  label {
    margin-bottom: 5px;
  }

  .image-radio {
    width: 60px;
    height: 60px;
    border-radius: 10px;
  }

  /* HIDE RADIO */
  input[type=radio] { 
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }

  /* IMAGE STYLES */
  input[type=radio] + .image-radio {
    cursor: pointer;
    margin-right: 10px;
  }

  /* CHECKED STYLES */
  input[type=radio]:checked + .image-radio {
    border: 2px solid red;
  }

  /* UPLOAD STYLES */
  input[type="file"] {
    display: none;
  }

  .custom-file-upload {
      border: 1px solid #ccc;
      display: inline-block;
      padding: 6px 12px;
      cursor: pointer;
      width: 100%;
  }

  .clear-file-btn {
    padding: 0;
  }

  .clear-file-btn:focus {
    outline:none;
    box-shadow: none;
  }

  .drop-file-area {
    border: 1px dotted #ccc;
    display: inline-block;
    margin: 5px auto;
    padding: 12px;
    cursor: pointer;
    text-align: center;
    width: 100%;
  }

  .drop-file-area  i {
    font-size: 2rem;
  }

  .drop-file-area  p {
    margin-top: 5px;
    font-size: 0.8rem;
  }

</style>

<% content_for(:page_desc) { t("room.invitation_description", name: @room.name) } %>

<% access_code_set = @room.access_code.present? %>
<% valid_access_code = access_code_set && @room.access_code == session[:access_code] %>
<% moderator_access_code_set = @room.moderator_access_code.present? && moderator_code_allowed? %>
<% valid_moderator_access_code = valid_moderator_access_code(session[:moderator_access_code]) %>
<% authorized = valid_access_code || valid_moderator_access_code || !access_code_set %>

<%= render 'rooms/components/room_event', render_recordings: authorized do %>
  <% if room_authentication_required %>
    <h2><%= t("administrator.site_settings.authentication.user-info") %></h2>
  <% elsif authorized %>
    <%= form_for room_path(@room), method: :post do |f| %>
      <div class="input-group">
        <%= f.hidden_field(:search, :value => params[:search])%>
        <%= f.hidden_field(:column, :value => params[:column])%>
        <%= f.hidden_field(:direction, :value => params[:direction])%>
        <%= f.text_field :join_name,
            required: true,
            class: "form-control join-form",
            placeholder: t("enter_your_name"),
            value: "#{@name}",
            readonly: !current_user.nil?, 
            autofocus: true,
            maxlength: 26
            %>
        <span class="input-group-append">
          <button id="room-join" type="submit" class="btn btn-primary btn-sm px-7 form-control join-form">
            <%= (!@room_running && @anyone_can_start) ? t("room.start") : t("room.join") %>
          </button>
        </span>
      </div>

      <p style="margin: 15px 0 10px 0;">Please select your avatar:</p>
      <% @template_avatar.each do |k, v|%>
        <label>
          <%= f.radio_button :join_avatar, k.to_s, :checked => k.to_s == "none" %>
          <img class="image-radio" src="<%= v %>">
        </label>
      <% end %>
      
      <p style="margin: 5px 0 10px 0;">Or upload your avatar:</p>
      <label class="custom-file-upload">
        <%= f.file_field :join_upload_avatar, accept: 'image/*', id: 'uploadInput', onchange: "uploadFileChange()"%>
        <i class="fas fa-cloud-upload-alt"></i>  Upload file
        <p id="uploadedFileName" style="margin-bottom: 0px">No file selected</p>
        <div class="drop-file-area" id="dropContainer">
          <i class="fas fa-arrow-alt-circle-down"></i>
          <p>You can drag and drop here to add them</p>
        </div>
      </label>
      
      
      <% if display_joiner_consent %>
        <label class="custom-control custom-checkbox">
          <input id="joiner-consent" type="checkbox" class="custom-control-input" required>
          <h4 class="text-left text-danger mt-4 custom-control-label"><%= t("room.recording_present") %></h4>
        </label>
      <% end %>
    <% end %>
    
    <button onclick="clearUploadFile()" type="button" class="btn btn-link clear-file-btn">Clear file</button>

    <% if moderator_access_code_set && !valid_moderator_access_code %>
      <!-- <hr class="mt-2 float-right w-100 moderator-code-hr"> -->
      <label class="moderator-code-label form-label"><%= t("room.optional_moderator_access_code") %></label>
      <%= render "rooms/components/enter_access_code_form", access_code_type: 'moderator' %>
    <% end %>
  <% else %>
    <%= render "rooms/components/enter_access_code_form", access_code_type: 'standard_access' %>
  <% end %>
<% end %>

<script>
  function clearUploadFile() {
    document.getElementById("uploadInput").value = "";
    document.getElementById("uploadedFileName").innerHTML = "No file selected";
  }

  function uploadFileChange() {
    splitUploadPath = document.getElementById("uploadInput").value.split('\\');
    splitUploadPathLength = splitUploadPath.length;
    document.getElementById("uploadedFileName").innerHTML = splitUploadPath[splitUploadPathLength - 1];
  }

  // dragover and dragenter events need to have 'preventDefault' called
  // in order for the 'drop' event to register. 
  // See: https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations#droptargets
  dropContainer.ondragover = dropContainer.ondragenter = function(e) {
    e.preventDefault();
  };

  dropContainer.ondrop = function(e) {
    const dT = new DataTransfer();
    dT.items.add(e.dataTransfer.files[0]);
    uploadInput.files = dT.files;

    uploadFileChange();
    e.preventDefault();
  };
</script>
